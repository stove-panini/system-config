---
- name: Configure MicroOS Host
  hosts: host
  gather_facts: true
  become: true
  handlers:
    - name: Message
      ansible.builtin.debug:
        msg: "New packages have been installed. Please reboot before continuing."

    - name: End play
      ansible.builtin.meta: end_play

    - name: Restart NetworkManager
      ansible.builtin.service:
        state: restarted
        name: NetworkManager

    - name: Daemon reload
      ansible.builtin.systemd:
        daemon_reload: true


  tasks:
    - name: Set MicroOS package lists
      ansible.builtin.set_fact:
        os_pkgs:
          #- nfs-client
          #- steam-devices
          - systemd-network

        flatpaks:
          - ca.desrt.dconf-editor
          - com.bitwarden.desktop
          - com.github.IsmaelMartinez.teams_for_linux
          - com.github.tchx84.Flatseal
          - com.mattjakeman.ExtensionManager
          - com.slack.Slack
          - com.vixalien.sticky
          - de.haeckerfelix.Fragments
          - io.github.celluloid_player.Celluloid
          - org.chromium.Chromium
          - org.gimp.GIMP
          - org.gnome.Aisleriot
          - org.gnome.Boxes
          - org.gnome.Calculator
          - org.gnome.Calendar
          - org.gnome.Characters
          - org.gnome.DejaDup
          - org.gnome.Evince
          - org.gnome.FileRoller
          - org.gnome.Firmware
          - org.gnome.Logs
          - org.gnome.Loupe
          - org.gnome.Mahjongg
          - org.gnome.Snapshot
          - org.gnome.TextEditor
          - org.gnome.Weather
          - org.gnome.baobab
          - org.gnome.clocks
          - org.remmina.Remmina
          - org.signal.Signal

    - name: Install OS packages
      community.general.zypper:
        state: present
        name: "{{ os_pkgs }}"
      notify:
        - Message
        - End play

    - name: Run handlers
      ansible.builtin.meta: flush_handlers

    - name: Start & enable systemd-resolved
      ansible.builtin.service:
        state: started
        name: systemd-resolved
        enabled: true

    - name: Link resolv.conf to systemd-resolved's stub resolver
      ansible.builtin.file:
        state: link
        force: true
        src: /run/systemd/resolve/stub-resolv.conf
        path: /etc/resolv.conf
      notify: Restart NetworkManager

    - name: Enable hostname resolution in NSS via systemd-resolved
      ansible.builtin.copy:
        src: files/host/etc/nsswitch.conf
        dest: /etc/
        owner: root
        group: root
        mode: 0644

    - name: Restore default getty behavior, clearing TTY1
      ansible.builtin.copy:
        src: files/host/etc/systemd/system/getty@tty1.service.d/override.conf
        dest: /etc/systemd/system/getty@tty1.service.d/
        owner: root
        group: root
        mode: 0644
      notify: Daemon reload

    - name: Desktop tasks
      when: ansible_form_factor == 'Desktop'
      block:
        - name: Disable builtin NIC on monitor
          ansible.builtin.copy:
            src: files/host/etc/udev/rules.d/viewsonic-nic.rules
            dest: /etc/udev/rules.d/
            owner: root
            group: root
            mode: 0644
            setype: udev_rules_t

        - name: Turn off suspend on AC power for GDM
          ansible.builtin.script: files/host/gsettings_gdm.sh
          register: result
          changed_when: result.stdout == "1"

    - name: Laptop tasks
      when: ansible_form_factor == 'Notebook'
      block:
        - name: Enable battery charging thresholds for ThinkPad
          ansible.builtin.copy:
            src: files/host/etc/systemd/system/battery-care.service
            dest: /etc/systemd/system/
            owner: root
            group: root
            mode: 0644

        - name: Start & enable battery-care service
          ansible.builtin.systemd:
            state: started
            name: battery-care
            enabled: true
            daemon_reload: true

    - name: User configuration
      become: false
      block:
        - name: Link user dotfiles
          ansible.builtin.file:
            state: link
            force: true
            src: "{{ item.root + item.path }}"
            path: "~/.{{ item.path }}"
          with_community.general.filetree: "{{ playbook_dir }}/files/dotfiles/"
          when: "'/' not in item.path"

        - name: Link user config dirs
          ansible.builtin.file:
            state: link
            force: true
            src: "{{ item.root + item.path }}"
            path: "~/.config/{{ item.path }}"
          with_community.general.filetree: "{{ playbook_dir }}/files/config/"
          when: item.state == 'directory' and '/' not in item.path

        - name: Install flatpaks
          community.general.flatpak:
            state: present
            name: "{{ flatpaks }}"
            method: user

        - name: Set gsettings prefs
          ansible.builtin.script: files/host/gsettings.sh
          register: result
          changed_when: result.stdout == "1"
